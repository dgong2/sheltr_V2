To Do List

-Will need to switch to "hacker" ($5/month) or "web dev" ($12/month) in september
-Update the tables in pythonanywhere
-Update the "Making Sheltr Live" google doc on dropping tables

Long term
-Convert to either Postgres or MySQL (Postgres is opensource), currently SQLite3 or something
-Create batch file for updating local sheltr code

General
-Base.html files for all headers/footers, with links to each sub page (search, blog, about us, PHC), with current page being highlighted
-Consistent font usage across all pages

Home Page
-Icons/writing on home page are not mobile optimized, lets change all to jpegs and see if that works
-Match background colors of sub page headers, and main page background (preferably made in a way where if one changes, all change)
-Edits jpegs for page icons to be custom (including main one as Sheltr logo)

Search
-Be able to input information from the excel sheet directly into the app database (suggestion, openpyxl) similar to "populate.py"
-Data checking/clear out old data
-Alert admin when data has not been changed/verified in a certain amount of time
-Search results should link to a list of providers with that category
	-Each one should be a link to a more detailed view of that provider
-Migrate to MySQL or PostgresSQL (Postgres is opensource, but will cost $15/month)

Blog
-Be able to link to the Facebook page
-Be able to show images and movies without saving to the DB (images are fine)
-Show link previews
-Input should be available by username/login, of which a different one per team member (that can be activated or deactivated)
-Email to blog update would be ideal

About Us
-Have a description of Sheltr
-A section with the "thanks" to people who have contributed or advised
-Working email/contact us section
-Link to facebook page
-Possible donations page when this is set-up

PHC
-Focus will be on transitional housing
-A nested form function to list and rank results
-Ideally, rank by "perfect match", but list other "close matches" as well (if possible, list why not fully qualified)
-Dynamically updating